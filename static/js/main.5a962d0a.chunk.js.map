{"version":3,"sources":["firebaseConfig.js","components/Auth/SocialAuth.js","components/Auth/AuthForm.js","routes/Auth.js","utils/Skeleton.js","components/Tweet/Tweet.js","routes/Home.js","utils/ManageData.js","components/Tweet/UploadTweet.js","utils/ClickOutSide.js","components/Navigation/Navigation.js","routes/Profile.js","components/Router.js","components/AppLoader/AppLoader.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","SocialAuth","onSocialClick","e","a","name","currentTarget","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","className","onClick","AuthForm","refreshUser","useState","email","setEmail","password","setPassword","displayName","setDisplayName","visiblePassword","setVisiblePassword","newAccount","setNewAccount","error","setError","loading","setLoading","onChange","target","value","length","classList","add","remove","emailInput","document","querySelector","pwInput","dnInput","submit","onSubmit","preventDefault","matches","createUserWithEmailAndPassword","then","user","updateProfile","signInWithEmailAndPassword","console","message","toggleVisible","type","prev","placeholder","autoFocus","color","height","width","Auth","TweetSkeleton","attachmentURL","attachmentHeight","style","Tweet","tweetObj","isOwner","userObj","editing","setEditing","text","newTweet","setNewTweet","seeingMore","setSeeingMore","likes","includes","uid","liked","setLiked","setLikes","loadCount","setLoadCount","userImg","setUserImg","tweetImg","setTweetImg","thisRef","useRef","maxLoadCount","useEffect","preUserImg","Image","onload","src","photoURL","preTweetImg","current","onDeleteClick","window","confirm","doc","id","delete","refFromURL","toggleEditing","update","updatedAt","Date","now","onLikeClick","newLikes","filter","ref","to","alt","createdAt","result","monthNames","date","passedTime","Math","floor","getFullYear","getMonth","getDate","convertTime2String","title","required","spellCheck","maxLength","slice","Home","tweets","setTweets","collection","orderBy","onSnapshot","snapshot","tweetArray","docs","map","data","tweet","creatorId","updateTweetFromFirebase","docId","changeObj","removeFileFromStorage","url","uploadFileToStorage","userId","photoRef","child","uuidv4","putString","response","getDownloadURL","readFile","fileEvent","file","files","reader","FileReader","onloadend","readAsDataURL","UploadTweet","toggleAddTweet","setTweet","setAttachmentHeight","attachment","setAttachment","uploading","setUploading","history","useHistory","push","action","accept","finishedEvent","image","sizeRate","getElementById","getBoundingClientRect","htmlFor","useClickOutSide","buttonQuery","toggleProfile","element","handleClickOutside","event","contains","addEventListener","removeEventListener","Navigation","openProfile","setOpenProfile","openAddTweet","setopenAddTweet","onLinkClick","toggle","clickOutRef_Profile","clickOutRef_AddTweet","signOut","Profile","newDisplayName","setNewDisplayName","userTweets","setUserTweets","updatingName","setUpdatingName","findId","useParams","getUserTweets","where","get","allTweets","forEach","onRemoveClick","go","onFileLoad","AppRouter","isLoggedIn","exact","path","AppLoader","App","init","setInit","setUserObj","onAuthStateChanged","args","Boolean","customUser","obj","currentUser","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5a962d0a.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React from \"react\";\n// import ReactDOM from \"react-dom\";\nimport { FcGoogle } from \"react-icons/fc\";\nimport { IoLogoGithub } from \"react-icons/io\";\nimport { authService, firebaseInstance } from \"firebaseConfig\";\n\nconst SocialAuth = () => {\n  const onSocialClick = async (e) => {\n    const name = e.currentTarget.name;\n\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n\n    await authService.signInWithPopup(provider);\n  };\n\n  return (\n    <div className=\"auth__social-container\">\n      <button\n        className=\"social-button google\"\n        name=\"google\"\n        onClick={onSocialClick}\n      >\n        <FcGoogle />\n      </button>\n      <button\n        className=\"social-button github\"\n        name=\"github\"\n        onClick={onSocialClick}\n      >\n        <IoLogoGithub />\n      </button>\n    </div>\n  );\n};\n\nexport default SocialAuth;\n","import React, { useState } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport { AiFillEyeInvisible, AiFillEye } from \"react-icons/ai\";\nimport { FiArrowRight } from \"react-icons/fi\";\nimport { authService } from \"firebaseConfig\";\nimport SocialAuth from \"./SocialAuth\";\n\nconst AuthForm = ({ refreshUser }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [displayName, setDisplayName] = useState(\"\");\n  const [visiblePassword, setVisiblePassword] = useState(false);\n  const [newAccount, setNewAccount] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const onChange = (e) => {\n    const {\n      target: { name, value },\n    } = e;\n\n    if (value.length > 0) {\n      e.target.classList.add(\"active\");\n    } else {\n      e.target.classList.remove(\"active\");\n    }\n\n    if (name === \"email\") setEmail(value);\n    if (name === \"password\") setPassword(value);\n    if (name === \"displayName\") setDisplayName(value);\n\n    const emailInput = document.querySelector(\".email-input\");\n    const pwInput = document.querySelector(\".password-input\");\n    const dnInput = document.querySelector(\".display-name-input\");\n    const submit = document.querySelector(\".submit\");\n\n    if (newAccount) {\n      if (\n        emailInput.value.length > 0 &&\n        pwInput.value.length > 0 &&\n        dnInput.value.length > 0\n      ) {\n        submit.classList.add(\"active\");\n      } else {\n        submit.classList.remove(\"active\");\n      }\n    } else {\n      if (emailInput.value.length > 0 && pwInput.value.length > 0) {\n        submit.classList.add(\"active\");\n      } else {\n        submit.classList.remove(\"active\");\n      }\n    }\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const submit = document.querySelector(\".submit\");\n\n    if (\n      email.length === 0 ||\n      password.length === 0 ||\n      submit.matches(\".loading\")\n    ) {\n      return;\n    }\n\n    submit.classList.add(\"loading\");\n    setLoading(true);\n    setError(\"\");\n\n    try {\n      if (newAccount) {\n        await authService\n          .createUserWithEmailAndPassword(email, password)\n          .then(async ({ user }) => {\n            await user.updateProfile({ displayName });\n          })\n          .then(() => refreshUser());\n      } else {\n        await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(\"Please check your email or password.\");\n      console.error(error.message);\n    } finally {\n      submit.classList.remove(\"loading\");\n      setLoading(false);\n    }\n  };\n\n  const toggleVisible = () => {\n    const pwInput = document.querySelector(\".password-input\");\n\n    if (visiblePassword) {\n      pwInput.type = \"password\";\n    } else {\n      pwInput.type = \"text\";\n    }\n\n    setVisiblePassword((prev) => !prev);\n  };\n\n  const toggleAccount = () => {\n    setNewAccount((prev) => !prev);\n\n    const emailInput = document.querySelector(\".email-input\");\n    emailInput.classList.remove(\"active\");\n\n    const pwInput = document.querySelector(\".password-input\");\n    pwInput.classList.remove(\"active\");\n\n    const submit = document.querySelector(\".submit\");\n    submit.classList.remove(\"active\");\n\n    setError(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n    setDisplayName(\"\");\n  };\n\n  return (\n    <>\n      <span className=\"title\">{newAccount ? \"Create Account\" : \"Sign In\"}</span>\n      <span className=\"auth__error\">{error}</span>\n      <form className=\"auth__form\" onSubmit={onSubmit}>\n        <div className=\"email-container\">\n          <input\n            className=\"email-input\"\n            name=\"email\"\n            type=\"text\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={onChange}\n            autoFocus\n          />\n        </div>\n        <div className=\"password-container\">\n          <input\n            className=\"password-input\"\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={onChange}\n          />\n          {visiblePassword ? (\n            <AiFillEye className=\"toggle-visible\" onClick={toggleVisible} />\n          ) : (\n            <AiFillEyeInvisible\n              className=\"toggle-visible\"\n              onClick={toggleVisible}\n            />\n          )}\n        </div>\n        {newAccount && (\n          <div className=\"display-name-container\">\n            <input\n              className=\"display-name-input\"\n              name=\"displayName\"\n              type=\"text\"\n              placeholder=\"Display Name\"\n              value={displayName}\n              onChange={onChange}\n            />\n          </div>\n        )}\n        <button className=\"submit\" type=\"submit\">\n          {loading ? (\n            <Loader\n              className=\"auth-submit__loader\"\n              type=\"Oval\"\n              color=\"#00BFFF\"\n              height={25}\n              width={25}\n            />\n          ) : (\n            <FiArrowRight />\n          )}\n        </button>\n      </form>\n\n      <SocialAuth />\n\n      <span className=\"auth__toggle-section\" onClick={toggleAccount}>\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport { IoLogoTwitter } from \"react-icons/io\";\nimport AuthForm from \"components/Auth/AuthForm\";\n\nconst Auth = ({ refreshUser }) => {\n  return (\n    <div className=\"auth-container\">\n      <IoLogoTwitter className=\"auth__logo\" />\n      <AuthForm refreshUser={refreshUser} />\n    </div>\n  );\n};\n\nexport default Auth;\n","import React from \"react\";\n\nconst TweetSkeleton = ({ attachmentURL, attachmentHeight }) => {\n  return (\n    <div className=\"skeleton__tweet-container\">\n      <div className=\"skeleton__tweet-header\">\n        <div className=\"skeleton__user-img\"></div>\n        <div className=\"skeleton__tweet-info\">\n          <div className=\"skeleton__info-display-name\"></div>\n          <div className=\"skeleton__info-time\"></div>\n        </div>\n      </div>\n      <div className=\"skeleton__tweet-text\"></div>\n      {attachmentURL && (\n        <div\n          className=\"skeleton__tweet-img\"\n          style={{ height: attachmentHeight }}\n        ></div>\n      )}\n      <div className=\"skeleton__tweet-like-container\">\n        <div className=\"skeleton__tweet-like\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport { TweetSkeleton };\n","/* eslint-disable */\n\nimport { dbService, storageService } from \"firebaseConfig\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { HiPencilAlt, HiOutlineHeart, HiHeart } from \"react-icons/hi\";\nimport { FaTrash } from \"react-icons/fa\";\nimport { TweetSkeleton } from \"utils/Skeleton\";\nimport { Link } from \"react-router-dom\";\n\nconst Tweet = ({ tweetObj, isOwner, userObj }) => {\n  const [editing, setEditing] = useState(false);\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\n  const [seeingMore, setSeeingMore] = useState(false);\n  const [liked, setLiked] = useState(tweetObj.likes.includes(userObj.uid));\n  const [likes, setLikes] = useState(tweetObj.likes);\n  const [loadCount, setLoadCount] = useState(0);\n  const [userImg, setUserImg] = useState(null);\n  const [tweetImg, setTweetImg] = useState(null);\n  const thisRef = useRef();\n\n  const maxLoadCount = tweetObj.attachmentURL ? 2 : 1;\n\n  useEffect(() => {\n    if (loadCount === 0) {\n      const preUserImg = new Image();\n      preUserImg.onload = function () {\n        setUserImg(preUserImg);\n        setLoadCount((prev) => prev + 1);\n      };\n\n      preUserImg.src = tweetObj.user.photoURL\n        ? tweetObj.user.photoURL\n        : process.env.REACT_APP_DEFAULT_PROFILE;\n\n      if (tweetObj.attachmentURL) {\n        const preTweetImg = new Image();\n        preTweetImg.onload = function () {\n          setTweetImg(preTweetImg);\n          setLoadCount((prev) => prev + 1);\n        };\n\n        preTweetImg.src = tweetObj.attachmentURL;\n      }\n    } else {\n      if (loadCount >= maxLoadCount) {\n        const userImgElement = thisRef.current.querySelector(\n          \".tweet__user-img\"\n        );\n        userImgElement.src = userImg.src;\n\n        if (tweetObj.attachmentURL) {\n          const tweetImgElement = thisRef.current.querySelector(\".tweet__img\");\n          tweetImgElement.src = tweetImg.src;\n        }\n      }\n    }\n  }, [loadCount]);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this tweet?\");\n\n    if (ok) {\n      await dbService.doc(`tweets/${tweetObj.id}`).delete();\n\n      if (tweetObj.attachmentURL !== \"\") {\n        await storageService.refFromURL(tweetObj.attachmentURL).delete();\n      }\n    }\n  };\n\n  const toggleEditing = () => {\n    setNewTweet(tweetObj.text);\n    setEditing((prev) => !prev);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    await dbService.doc(`tweets/${tweetObj.id}`).update({\n      text: newTweet,\n      updatedAt: Date.now(),\n    });\n    setEditing(false);\n  };\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n\n    setNewTweet(value);\n  };\n\n  const onSeeMoreClick = () => {\n    setSeeingMore((prev) => !prev);\n  };\n\n  const convertTime2String = (updatedAt, createdAt) => {\n    const monthNames = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n\n    const now = new Date();\n    const date = new Date(createdAt);\n    const passedTime = Math.floor((now - date) / 1000);\n    let result;\n\n    if (passedTime < 60) result = \"Just Now\";\n    else if (passedTime < 120) result = `1 minute ago`;\n    else if (passedTime < 3600)\n      result = `${Math.floor(passedTime / 60)} minutes ago`;\n    else if (passedTime < 7200) result = `1 hour ago`;\n    else if (passedTime < 86400)\n      result = `${Math.floor(passedTime / 3600)} hours ago`;\n    else if (passedTime < 172800) result = `1 day ago`;\n    else if (passedTime < 604800)\n      result = `${Math.floor(passedTime / 86400)} days ago`;\n    else if (now.getFullYear() === date.getFullYear()) {\n      result = `${monthNames[date.getMonth()]} ${date.getDate()}`;\n    } else {\n      result = `${\n        monthNames[date.getMonth()]\n      } ${date.getDate()} ${date.getFullYear()}`;\n    }\n\n    if (updatedAt !== createdAt) {\n      result += \"(modified)\";\n    }\n\n    return result;\n  };\n\n  const onLikeClick = async () => {\n    let newLikes;\n\n    if (!liked) {\n      newLikes = [...likes, userObj.uid];\n    } else {\n      newLikes = likes.filter((id) => id !== userObj.uid);\n    }\n\n    await dbService.doc(`tweets/${tweetObj.id}`).update({\n      likes: newLikes,\n    });\n\n    setLikes(newLikes);\n    setLiked((prev) => !prev);\n  };\n\n  return (\n    <div className=\"tweet-container\" ref={thisRef}>\n      {loadCount < maxLoadCount ? (\n        <TweetSkeleton\n          attachmentURL={tweetObj.attachmentURL}\n          attachmentHeight={tweetObj.attachmentHeight}\n        />\n      ) : (\n        <>\n          <div className=\"tweet__header\">\n            <div className=\"user-container\">\n              <Link\n                to={`/profile/${tweetObj.user.uid}`}\n                className=\"tweet__user-link\"\n              >\n                <img alt=\"\" className=\"tweet__user-img\" />\n              </Link>\n              <div className=\"tweet-info\">\n                <Link\n                  to={`/profile/${tweetObj.user.uid}`}\n                  className=\"info__display-name-link\"\n                >\n                  <span className=\"info__display-name\">\n                    {tweetObj.user.displayName}\n                  </span>\n                </Link>\n                <span className=\"info__time\">\n                  {convertTime2String(tweetObj.updatedAt, tweetObj.createdAt)}\n                </span>\n              </div>\n            </div>\n            {isOwner && (\n              <div className=\"tweet-modify\">\n                <button\n                  onClick={toggleEditing}\n                  title=\"Edit\"\n                  {...(editing && { style: { color: \"white\" } })}\n                >\n                  <HiPencilAlt />\n                </button>\n                <button onClick={onDeleteClick} title=\"Delete\">\n                  <FaTrash />\n                </button>\n              </div>\n            )}\n          </div>\n          {editing ? (\n            <>\n              {isOwner && (\n                <>\n                  <form onSubmit={onSubmit} className=\"tweet-edit-container\">\n                    <textarea\n                      type=\"text\"\n                      placeholder=\"Edit your tweet\"\n                      value={newTweet}\n                      required\n                      onChange={onChange}\n                      spellCheck={false}\n                      maxLength={1000}\n                    />\n                    <div className=\"tweet-edit__button-container\">\n                      <button onClick={toggleEditing}>Cancel</button>\n                      <input type=\"submit\" value=\"Update Tweet\" />\n                    </div>\n                  </form>\n                </>\n              )}\n            </>\n          ) : (\n            <>\n              <span className=\"tweet__text\">\n                {!seeingMore ? (\n                  <>\n                    {tweetObj.text.slice(0, 100)}\n                    {tweetObj.text.length > 100 && (\n                      <>\n                        ...\n                        <span className=\"see-more\" onClick={onSeeMoreClick}>\n                          See More\n                        </span>\n                      </>\n                    )}\n                  </>\n                ) : (\n                  <>{tweetObj.text}</>\n                )}\n              </span>\n              {tweetObj.attachmentURL && (\n                <div className=\"tweet__img-container\">\n                  <img\n                    className=\"tweet__img\"\n                    alt=\"\"\n                    {...(tweetImg && { src: tweetImg.src })}\n                  />\n                </div>\n              )}\n              <div className=\"tweet__like-container\">\n                <div className=\"like-inner-container\" onClick={onLikeClick}>\n                  {liked ? <HiHeart className=\"liked\" /> : <HiOutlineHeart />}\n                  <span className={liked ? \"like-count active\" : \"like-count\"}>\n                    {likes.length}\n                  </span>\n                </div>\n              </div>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Tweet;\n","import React, { useEffect, useState } from \"react\";\nimport { dbService } from \"firebaseConfig\";\nimport Tweet from \"components/Tweet/Tweet\";\n\nconst Home = ({ userObj }) => {\n  const [tweets, setTweets] = useState([]);\n\n  useEffect(() => {\n    dbService\n      .collection(\"tweets\")\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snapshot) => {\n        const tweetArray = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n\n        setTweets(tweetArray);\n      });\n  }, []);\n\n  return (\n    <div className=\"home\">\n      <div className=\"tweets\">\n        {tweets.map((tweet) => (\n          <Tweet\n            key={tweet.id}\n            tweetObj={tweet}\n            isOwner={tweet.creatorId === userObj.uid}\n            userObj={userObj}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import { v4 as uuidv4 } from \"uuid\";\nimport { dbService, storageService } from \"firebaseConfig\";\n\nconst updateTweetFromFirebase = async (docId, changeObj) => {\n  await dbService.doc(`tweets/${docId}`).update(changeObj);\n};\n\nconst removeFileFromStorage = async (url) => {\n  if (url !== \"\") {\n    try {\n      await storageService.refFromURL(url).delete();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n};\n\nconst uploadFileToStorage = async (userId, data) => {\n  let photoURL = \"\";\n  if (data !== \"\") {\n    const photoRef = storageService.ref().child(`${userId}/${uuidv4()}`);\n    const response = await photoRef.putString(data, \"data_url\");\n    photoURL = await response.ref.getDownloadURL();\n  }\n\n  return photoURL;\n};\n\nconst readFile = (fileEvent, onload) => {\n  const {\n    target: { files },\n  } = fileEvent;\n\n  const file = files[0];\n  const reader = new FileReader();\n  reader.onloadend = onload;\n  reader.readAsDataURL(file);\n};\n\nexport {\n  updateTweetFromFirebase,\n  removeFileFromStorage,\n  uploadFileToStorage,\n  readFile,\n};\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { BiImageAdd } from \"react-icons/bi\";\nimport { RiDeleteBin2Fill } from \"react-icons/ri\";\nimport Loader from \"react-loader-spinner\";\nimport { dbService } from \"firebaseConfig\";\nimport { readFile, uploadFileToStorage } from \"utils/ManageData\";\n\nconst UploadTweet = ({ userObj, toggleAddTweet }) => {\n  const [tweet, setTweet] = useState(\"\");\n  const [attachmentHeight, setAttachmentHeight] = useState(null);\n  const [attachment, setAttachment] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const history = useHistory();\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (tweet.length < 1) return;\n\n    setUploading(true);\n    const attachmentURL = await uploadFileToStorage(userObj.uid, attachment);\n\n    const createdAt = Date.now();\n    const tweetObj = {\n      text: tweet,\n      createdAt,\n      updatedAt: createdAt,\n      creatorId: userObj.uid,\n      attachmentURL,\n      attachmentHeight: attachmentHeight || 0,\n      user: {\n        displayName: userObj.displayName,\n        uid: userObj.uid,\n        photoURL: userObj.photoURL,\n      },\n      likes: [],\n    };\n\n    await dbService.collection(\"tweets\").add(tweetObj);\n\n    setTweet(\"\");\n    setAttachment(\"\");\n    toggleAddTweet();\n    setUploading(false);\n    history.push(\"/\");\n  };\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n\n    const submit = document.querySelector(\".add-tweet__submit\");\n\n    if (value.length > 0) {\n      submit.classList.add(\"active\");\n    } else {\n      submit.classList.remove(\"active\");\n    }\n\n    setTweet(value);\n  };\n\n  const onFileChange = (e) => {\n    const submit = document.querySelector(\".add-tweet__submit\");\n    submit.classList.remove(\"active\");\n\n    const onFileLoad = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n\n      let image = new Image();\n      image.onload = () => {\n        const rect = document.getElementById(\"root\").getBoundingClientRect();\n        const maxWidth = rect.width - 30;\n        const sizeRate = maxWidth / image.width;\n\n        if (sizeRate * image.height >= 600) {\n          setAttachmentHeight(600);\n        } else {\n          setAttachmentHeight(Math.floor(sizeRate * image.height));\n        }\n\n        if (document.querySelector(\".add-tweet__input\").value.length > 0) {\n          submit.classList.add(\"active\");\n        }\n      };\n      image.src = result;\n\n      setAttachment(result);\n    };\n\n    readFile(e, onFileLoad);\n  };\n\n  const onClearAttachment = () => {\n    document.querySelector(\".file-upload\").value = \"\";\n    setAttachment(\"\");\n  };\n\n  return (\n    <form className=\"add-tweet-form\" action=\"\" onSubmit={onSubmit}>\n      <input\n        className=\"file-upload\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        id=\"file-upload\"\n      />\n      <label htmlFor=\"file-upload\">\n        <BiImageAdd />\n        Add a photo...\n      </label>\n      {attachment && (\n        <div className=\"file-preview\">\n          <img src={attachment} alt=\"preview\" />\n          <button onClick={onClearAttachment}>\n            <RiDeleteBin2Fill />\n          </button>\n        </div>\n      )}\n      <textarea\n        className=\"add-tweet__input\"\n        value={tweet}\n        onChange={onChange}\n        placeholder=\"What's on your mind?\"\n        maxLength={1000}\n        spellCheck=\"false\"\n      />\n      {uploading ? (\n        <Loader\n          className=\"auth-submit__loader\"\n          type=\"Oval\"\n          color=\"#00BFFF\"\n          height={25}\n          width={25}\n        />\n      ) : (\n        <input className=\"add-tweet__submit\" type=\"submit\" value=\"Tweet\" />\n      )}\n    </form>\n  );\n};\n\nexport default UploadTweet;\n","/* eslint-disable */\n\nimport { useRef, useEffect } from \"react\";\n\nexport const useClickOutSide = (buttonQuery, toggleProfile) => {\n  const element = useRef();\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (element.current && !element.current.contains(event.target)) {\n        const button = document.querySelector(buttonQuery);\n\n        if (!button.contains(event.target)) {\n          toggleProfile();\n        }\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [element]);\n\n  return element;\n};\n","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { IoLogoTwitter } from \"react-icons/io\";\nimport { FiPlus } from \"react-icons/fi\";\nimport { authService } from \"firebaseConfig\";\nimport UploadTweet from \"components/Tweet/UploadTweet\";\nimport { useClickOutSide } from \"utils/ClickOutSide\";\n\nconst Navigation = ({ userObj }) => {\n  const [openProfile, setOpenProfile] = useState(false);\n  const [openAddTweet, setopenAddTweet] = useState(false);\n  const history = useHistory();\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const onLinkClick = () => {\n    setOpenProfile(false);\n  };\n\n  const toggleProfile = () => {\n    const profile = document.querySelector(\".nav-item.profile\");\n\n    profile.classList.toggle(\"active\");\n    setOpenProfile((prev) => !prev);\n  };\n\n  const toggleAddTweet = () => {\n    const addTweet = document.querySelector(\".add-tweet\");\n\n    addTweet.classList.toggle(\"active\");\n    setopenAddTweet((prev) => !prev);\n  };\n\n  const clickOutRef_Profile = useClickOutSide(\n    \".nav-item.profile\",\n    toggleProfile\n  );\n  const clickOutRef_AddTweet = useClickOutSide(\".add-tweet\", toggleAddTweet);\n\n  return (\n    <nav className=\"navigation\">\n      <Link to=\"/\" className=\"nav-item home\" onClick={onLinkClick}>\n        <IoLogoTwitter />\n      </Link>\n      <div className=\"add-tweet\" onClick={toggleAddTweet}>\n        <FiPlus />\n      </div>\n      <div className=\"nav-item profile\" onClick={toggleProfile}>\n        <img\n          src={\n            userObj.photoURL\n              ? userObj.photoURL\n              : \"https://www.flaticon.com/svg/static/icons/svg/3064/3064559.svg\"\n          }\n          alt=\"\"\n        />\n      </div>\n      {openProfile && (\n        <div className=\"profile-menu\" ref={clickOutRef_Profile}>\n          <span className=\"profile-menu__name\">\n            Hello, <strong>{userObj.displayName}</strong>\n          </span>\n          <Link\n            to={`/profile/${userObj.uid}`}\n            className=\"menu-item profile\"\n            onClick={onLinkClick}\n          >\n            Your Profile\n          </Link>\n          <div className=\"menu-item logout\" onClick={onLogOutClick}>\n            Sign out\n          </div>\n        </div>\n      )}\n      {openAddTweet && (\n        <div className=\"add-tweet-container\" ref={clickOutRef_AddTweet}>\n          <UploadTweet userObj={userObj} toggleAddTweet={toggleAddTweet} />\n        </div>\n      )}\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\nimport { dbService } from \"firebaseConfig\";\nimport Tweet from \"components/Tweet/Tweet\";\nimport {\n  readFile,\n  removeFileFromStorage,\n  updateTweetFromFirebase,\n  uploadFileToStorage,\n} from \"utils/ManageData\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const [userTweets, setUserTweets] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [updatingName, setUpdatingName] = useState(false);\n  const { id: findId } = useParams();\n  const history = useHistory();\n\n  const getUserTweets = async () => {\n    const tweets = await dbService\n      .collection(\"tweets\")\n      .where(\"creatorId\", \"==\", findId)\n      .orderBy(\"createdAt\", \"desc\")\n      .get();\n\n    const allTweets = tweets.docs.map((doc) => ({\n      id: doc.id,\n      ...doc.data(),\n    }));\n    setUserTweets(allTweets);\n  };\n\n  useEffect(() => {\n    getUserTweets();\n  });\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n\n    const submit = document.querySelector(\".profile-edit__submit\");\n\n    if (userObj.displayName === value) {\n      submit.classList.add(\"un-active\");\n    } else {\n      submit.classList.remove(\"un-active\");\n    }\n\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    if (userObj.displayName !== newDisplayName) {\n      setUpdatingName(true);\n      setUserTweets((prev) => {\n        return prev.map((tweetObj) => {\n          tweetObj.user.displayName = newDisplayName;\n\n          return tweetObj;\n        });\n      });\n\n      userTweets.forEach(async (tweetObj) => {\n        await updateTweetFromFirebase(tweetObj.id, {\n          user: {\n            ...tweetObj.user,\n            displayName: newDisplayName,\n          },\n        });\n      });\n\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n\n      setUpdatingName(false);\n      refreshUser();\n    }\n  };\n\n  const onFileChange = (e) => {\n    const onFileLoad = async (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n\n      await removeFileFromStorage(userObj.photoURL);\n      const photoURL = await uploadFileToStorage(userObj.uid, result);\n\n      userTweets.forEach(async (tweetObj) => {\n        await updateTweetFromFirebase(tweetObj.id, {\n          user: {\n            ...tweetObj.user,\n            photoURL,\n          },\n        });\n      });\n\n      await userObj.updateProfile({\n        photoURL,\n      });\n\n      history.go(0);\n      setUploading(false);\n    };\n\n    setUploading(true);\n    readFile(e, onFileLoad);\n  };\n\n  const onRemoveClick = async () => {\n    setUploading(true);\n\n    await removeFileFromStorage(userObj.photoURL);\n\n    userTweets.forEach(async (tweetObj) => {\n      await updateTweetFromFirebase(tweetObj.id, {\n        user: {\n          ...tweetObj.user,\n          photoURL: \"\",\n        },\n      });\n    });\n\n    await userObj.updateProfile({\n      photoURL: \"\",\n    });\n\n    history.go(0);\n    setUploading(false);\n  };\n\n  return (\n    <div className=\"home\">\n      {userObj.uid === findId && (\n        <>\n          <h3>Edit Profile</h3>\n          <form onSubmit={onSubmit} className=\"profile-edit-container\">\n            <span>Display name</span>\n            <input\n              onChange={onChange}\n              type=\"text\"\n              placeholder=\"Display name\"\n              value={newDisplayName}\n              className=\"profile-edit__name\"\n              spellCheck={false}\n            />\n            <span>Profile photo</span>\n\n            <div className=\"profile-edit__photo\">\n              <img\n                src={\n                  userObj.photoURL\n                    ? userObj.photoURL\n                    : process.env.REACT_APP_DEFAULT_PROFILE\n                }\n                alt=\"\"\n              />\n              {uploading ? (\n                <Loader\n                  className=\"profile-edit-photo__loader\"\n                  type=\"Oval\"\n                  color=\"#00BFFF\"\n                  height={25}\n                  width={25}\n                />\n              ) : (\n                <div className=\"edit-photo__button-container\">\n                  <input\n                    className=\"edit-photo__file-upload\"\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={onFileChange}\n                    id=\"edit-photo__file-upload\"\n                  />\n                  <label htmlFor=\"edit-photo__file-upload\">Upload photo</label>\n                  <div\n                    className=\"edit-photo__button-remove\"\n                    onClick={onRemoveClick}\n                  >\n                    Remove photo\n                  </div>\n                </div>\n              )}\n            </div>\n            {updatingName ? (\n              <div className=\"profile-edit__submit updating\">\n                <Loader\n                  className=\"profile-edit-photo__loader\"\n                  type=\"Oval\"\n                  color=\"#00BFFF\"\n                  height={20}\n                  width={20}\n                />\n              </div>\n            ) : (\n              <input\n                type=\"submit\"\n                value=\"Update Profile\"\n                className=\"profile-edit__submit un-active\"\n              />\n            )}\n          </form>\n        </>\n      )}\n\n      <h3>{userObj.uid === findId ? \"Your\" : \"All\"} Tweets</h3>\n      <div className=\"tweets\">\n        {userTweets &&\n          userTweets.map((tweetObj) => (\n            <Tweet\n              key={tweetObj.id}\n              tweetObj={tweetObj}\n              isOwner={userObj.uid === findId}\n              userObj={userObj}\n            />\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Navigation from \"components/Navigation/Navigation\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile/:id\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth refreshUser={refreshUser} />\n          </Route>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React from \"react\";\nimport { IoLogoTwitter } from \"react-icons/io\";\n\nconst AppLoader = () => {\n  return (\n    <div className=\"app-init-loader\">\n      <IoLogoTwitter className=\"loading-logo\" />\n      <footer>&copy; 2021 Twitter Clone</footer>\n    </div>\n  );\n};\n\nexport default AppLoader;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport AppLoader from \"components/AppLoader/AppLoader\";\nimport { authService } from \"firebaseConfig\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n          photoURL: user.photoURL,\n        });\n      } else {\n        setUserObj(null);\n      }\n\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = (customUser = null, obj) => {\n    let user;\n\n    if (customUser) {\n      user = customUser;\n    } else {\n      user = authService.currentUser;\n    }\n\n    if (obj) {\n      setUserObj((prev) => {\n        return {\n          ...prev,\n          ...obj,\n        };\n      });\n    } else {\n      setUserObj({\n        displayName: user.displayName,\n        uid: user.uid,\n        updateProfile: (args) => user.updateProfile(args),\n        photoURL: user.photoURL,\n      });\n    }\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        <AppLoader />\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"scss/styles.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}